---
// src/components/FeaturedPostCard.astro
import type { Post } from '../types';
const { post } = Astro.props as { post: Post };
const postUrl = `/${post.category?.slug}/${post.slug}`;
const imageUrl = `https://pub-9dc5be99bc6d43cb9b0a439ff54242d7.r2.dev/${post.featured_image.filename_disk}`
function createExcerpt(htmlContent: string, maxLength: number = 150) {
  const text = htmlContent.replace(/<[^>]+>/g, '');
  if (text.length <= maxLength) return text;
  return text.slice(0, maxLength).trim() + '...';
}
const excerpt = createExcerpt(post.content);
---
<article class="flex flex-col h-full">
    {imageUrl && (
       <img 
  src={`https://pub-9dc5be99bc6d43cb9b0a439ff54242d7.r2.dev/${post.featured_image.filename_disk}`} 
  alt={post.title}
  loading="lazy"
  decoding="async"
  class="w-full object-cover rounded-xl"
/>
    )}
    <div class="flex flex-col flex-grow">
        <div class="flex items-center gap-4 text-xs font-sans mb-2">
            {post.category && <a href={`/categories/${post.category.slug}`} class="text-[var(--color-primary)] font-bold uppercase hover:underline">{post.category.name}</a>}
            <span class="text-[var(--color-secondary)]">{new Date(post.date_published).toLocaleDateString('id-ID', {day: 'numeric', month: 'long', year: 'numeric'})}</span>
        </div>
        <h2 class="font-sans text-3xl lg:text-4xl font-bold text-[var(--color-text)] leading-tight">
            <a href={postUrl} class="hover:text-[var(--color-primary)] transition-colors">{post.title}</a>
        </h2>
        <p class="text-[var(--color-secondary)] mt-4 text-base">
            {excerpt}
        </p>
    </div>
</article>